version: '3'

services:
  app:
    build: ./app
    ports:
      - 3000
    links:
      - db
    env_file: environment/production.env
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  db:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - ./data/db:/data/db
    restart: always
    env_file: environment/production.env
    command: mongod --smallfiles --logpath=/dev/null # --quiet

  nginx:
    container_name: node-nginx
    image: nginx:1.15-alpine
    restart: always
    links:
      - app:app
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

